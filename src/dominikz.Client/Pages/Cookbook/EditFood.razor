@page "/cookbook/foods"
@page "/cookbook/foods/{id:guid}"
@using dominikz.Domain.Enums.Cookbook
@using Microsoft.AspNetCore.Components
@using dominikz.Client.Utils
<PageTitle>Foods</PageTitle>

<div class="flex-column gap">
<ChipSelect T="FoodWrapper"
            Values="_foods"
            TextFormatter="x => x.Name"
            AllowSelect="false"
            AllowExpand="false"
            ChipClicked="OnFoodChanged"/>

@if (_vm != null)
{
    <EditForm EditContext="@_editContext" OnSubmit="@OnSaveClicked">
        <DataAnnotationsValidator/>

        <div class="flex-column gap">

            <div class="flex-row gap">

                @* General *@
                <div class="grid-col-3 gap">
                    <div class="grid-label grid-label-span-5">
                        <span>‚öôÔ∏è</span>
                    </div>

                    <div class="grid-input-label">
                        <span>Name:</span>
                    </div>
                    <div class="flex-column gap">
                        <TextBox Placeholder="Title" @bind-Value="_vm!.Name"/>
                        <ValidationMessage For="@(() => _vm.Name)"/>
                    </div>

                    <div class="grid-input-label">
                        <span>Supermarkt Check Id:</span>
                    </div>
                    <div class="flex-column gap">
                        <NumberPicker Value="@_vm.SupermarktCheckId" ValueChanged="OnSupermarktCheckId"/>
                        <ValidationMessage For="@(() => _vm.SupermarktCheckId)"/>
                    </div>

                    <div class="grid-input-label">
                        <span>Price:</span>
                    </div>
                    <div class="flex-column gap">
                        <FloatingNumberPicker @bind-Value="_vm.Price" Min="0"/>
                        <ValidationMessage For="@(() => _vm.Price)"/>
                    </div>

                    <div class="grid-input-label">
                        <span>Value:</span>
                    </div>
                    <div class="flex-column gap">
                        <FloatingNumberPicker @bind-Value="_vm.Value"/>
                        <ValidationMessage For="@(() => _vm.Value)"/>
                    </div>

                    <div class="grid-input-label">
                        <span>Unit:</span>
                    </div>
                    <div class="flex-column gap">
                        <EnumPicker T="FoodUnit"
                                    @bind-Selected="_vm.Unit"
                                    Values="Enum.GetValues<FoodUnit>().ToList()"/>
                        <ValidationMessage For="@(() => _vm.Unit)"/>
                    </div>
                </div>

                @* Nutritional Values *@
                <div class="grid-col-3 gap">
                    <div class="grid-label grid-label-span-7">
                        <span>üå±</span>
                    </div>

                    <div class="grid-input-label">
                        <span>Calories:</span>
                    </div>
                    <div class="flex-column gap">
                        <FloatingNumberPicker @bind-Value="_vm.CaloriesInKcal" Min="0"/>
                        <ValidationMessage For="@(() => _vm.CaloriesInKcal)"/>
                    </div>

                    <div class="grid-input-label">
                        <span>Protein:</span>
                    </div>
                    <div class="flex-column gap">
                        <FloatingNumberPicker @bind-Value="_vm.ProteinInG" Min="0"/>
                        <ValidationMessage For="@(() => _vm.ProteinInG)"/>
                    </div>

                    <div class="grid-input-label">
                        <span>Carbohydrates:</span>
                    </div>
                    <div class="flex-column gap">
                        <FloatingNumberPicker @bind-Value="_vm.CarbohydratesInG" Min="0"/>
                        <ValidationMessage For="@(() => _vm.CarbohydratesInG)"/>
                    </div>

                    <div class="grid-input-label">
                        <span>Fat:</span>
                    </div>
                    <div class="flex-column gap">
                        <FloatingNumberPicker @bind-Value="_vm.FatInG" Min="0"/>
                        <ValidationMessage For="@(() => _vm.FatInG)"/>
                    </div>

                    <div class="grid-input-label">
                        <span>Dietary Fiber:</span>
                    </div>
                    <div class="flex-column gap">
                        <FloatingNumberPicker @bind-Value="_vm.DietaryFiberInG" Min="0"/>
                        <ValidationMessage For="@(() => _vm.DietaryFiberInG)"/>
                    </div>

                    <div class="grid-input-label">
                        <span>Sugar:</span>
                    </div>
                    <div class="flex-column gap">
                        <FloatingNumberPicker @bind-Value="_vm.SugarInG" Min="0"/>
                        <ValidationMessage For="@(() => _vm.SugarInG)"/>
                    </div>

                    <div class="grid-input-label">
                        <span>Salt:</span>
                    </div>
                    <div class="flex-column gap">
                        <FloatingNumberPicker @bind-Value="_vm.SaltInG" Min="0"/>
                        <ValidationMessage For="@(() => _vm.SaltInG)"/>
                    </div>

                </div>
            </div>

            @* Summary *@
            <ValidationSummary/>
            <div class="button">
                <TextButton Text="Save" Disabled="@(!_isEnabled)"/>
            </div>

        </div>

    </EditForm>
}

</div>