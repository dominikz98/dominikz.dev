@page "/cookbook/recipes/{recipeid:guid}"
@using dominikz.Client.Utils
@using dominikz.Client.Components.Charts

<PageTitle>@_vm.Name</PageTitle>

<div class="flex-row gap">
    <div class="recipe-thumbnail">
        <img src="@_vm.ImageUrl" alt="Thumbnail"/>
    </div>

    <div class="flex-column gap">
        <h2>@_vm.Name</h2>

        <div class="flex-row gap">
            <div class="tooltip">
                <span>@EnumFormatter.ToIcon(_vm.Type)</span>
                <span class="tooltip-text">@EnumFormatter.ToText(_vm.Type)</span>
            </div>

            @foreach (var flag in _vm.Flags)
            {
                <div class="tooltip">
                    <span>@EnumFormatter.ToIcon(flag)</span>
                    <span class="tooltip-text">@EnumFormatter.ToText(flag)</span>
                </div>
            }
        </div>
    </div>
</div>

@if (_hasCreatePermission)
{
    <hr/>
    <div class="flex-row">
        <div class="admin-menu-element gap">
            <IconButton OnClick="@(() => NavManager!.NavigateTo($"/cookbook/recipes/edit/{_vm.Id}"))" Icon="fa-solid fa-pen-to-square"/>
        </div>
    </div>
}

<hr/>

<div class="flex-column gap">

    <div class="recipe-grid">
        @* Steps / Time *@
        <div class="flex-column spacing gap surface">

            <span>
                <b>Steps</b>
            </span>

            <div class="flex-row gap">
                <div class="tooltip">
                    <span>üî™ @_vm.PreparationTime m</span>
                    <span class="tooltip-text">"Preparation</span>
                </div>

                <div class="tooltip">
                    <span>üç≥ @_vm.CookingTime m</span>
                    <span class="tooltip-text">"Cooking/Baking</span>
                </div>
            </div>

            @foreach (var step in _vm.Steps)
            {
                <div>
                    <span>
                        <b>@(step.Order).</b>
                        <br/>
                        @step.Text
                    </span>
                </div>
            }
        </div>

        @* Ingredients  *@
        <div class="flex-column spacing gap surface">
            <span>
                <b>Ingredients</b>
                (@_vm.Portions Portions)
            </span>

            <table>
                <tbody>
                @foreach (var ingredient in _vm.Ingredients)
                {
                    <tr>
                        <td>@Math.Round(ingredient.Factor * ingredient.Value, 1, MidpointRounding.AwayFromZero) @ingredient.Unit</td>
                        <td>@ingredient.Name</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>

    <div class="recipe-grid">
        @* Nutritional Table *@
        <div class="flex-column spacing gap surface">
            <span>
                <b>Nutritional Table</b>
                <br/>
                (per Portion)
            </span>

            <NutriScore Value="_vm.NutriScore"/>

            <table>
                <tbody>
                <tr>
                    <td>Calories</td>
                    <td>@CalculateCalories() Kcal</td>
                </tr>
                <tr>
                    <td>Protein</td>
                    <td>@CalculateProtein() G</td>
                </tr>
                <tr>
                    <td>Carbohydrates</td>
                    <td>@CalculateCarbohydrates() G</td>
                </tr>
                <tr>
                    <td>Fat</td>
                    <td>@CalculateFat() G</td>
                </tr>
                <tr>
                    <td>Dietary Fiber</td>
                    <td>@CalculateDietaryFiber() G</td>
                </tr>
                <tr>
                    <td>Sugar</td>
                    <td>@CalculateSugar() G</td>
                </tr>
                <tr>
                    <td>Salt</td>
                    <td>@CalculateSalt() G</td>
                </tr>
                </tbody>
            </table>

        </div>

        @* Price  *@
        @if (_vm.PriceSnapshots.Count > 0)
        {
            <div class="flex-column spacing gap surface">

                <span>
                    <b>Price Trends</b>
                    <br/>
                    (per Portion)
                </span>

                <BarChart Width="500"
                          Height="200"
                          Values="@_vm.PriceSnapshots.OrderBy(x => x.Date).Select(x => new ChartItem(x.Date.ToString("MM.yyyy"), x.Price)).ToList()"
                          MaxValue="@(_vm.PriceSnapshots.Max(x => x.Price) + 1)"/>
            </div>   
        }
    </div>

</div>