@using Microsoft.AspNetCore.Components
@using dominikz.Domain.Enums.Movies

@page "/movies/edit"
@page "/movies/edit/{movieid:guid}"

@if (_isEnabled == false)
{
    <PageTitle>Loading</PageTitle>
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <PageTitle>@(MovieId == null ? "Movie" : _data.ViewModel.Title)</PageTitle>

    <EditForm EditContext="@_editContext" OnSubmit="@OnSaveClicked">
        <DataAnnotationsValidator/>

        <div class="container">

            @* Externals *@
            <div class="grid-col-2 shrink gap">
                <div class="grid-label grid-label-span-3">
                    <span>üîó</span>
                </div>

                <div class="flex-column gap">
                    <TextBox Placeholder="ImdbId"
                             Value="@_data.ViewModel.ImdbId"
                             ValueChanged="OnImdbIdChanged"
                             DelayInputTrigger="true"/>
                    <ValidationMessage For="@(() => _data.ViewModel.Title)"/>
                </div>
            </div>

            <div class="spacer"></div>

            @* General *@
            <div class="grid-col-3 shrink gap">
                <div class="grid-label grid-label-span-4">
                    <span>‚öôÔ∏è</span>
                </div>

                <div class="input-label">
                    <span>Publish Date:</span>
                </div>
                <div class="flex-column gap">
                    <DatePicker @bind-Date="_data.ViewModel.PublishDate"/>
                    <ValidationMessage For="@(() => _data.ViewModel.PublishDate)"/>
                </div>

                <div class="input-label">
                    <span>Runtime:</span>
                </div>
                <div class="flex-column gap">
                    <TimePicker @bind-Time="_data.ViewModel.Runtime"/>
                    <ValidationMessage For="@(() => _data.ViewModel.Runtime)"/>
                </div>

                <div class="input-label">
                    <span>Publishing Year:</span>
                </div>
                <div class="flex-column gap">
                    <NumberPicker @bind-Value="_data.ViewModel.Year"/>
                    <ValidationMessage For="@(() => _data.ViewModel.Year)"/>
                </div>

                <div class="input-label">
                    <span>Genres:</span>
                </div>
                <div class="flex-column gap">
                    <ChipSelect T="MovieGenresFlags"
                                @bind-Selected="_data.ViewModel.Genres"
                                AllowMultiSelect="true"
                                Values="Enum.GetValues<MovieGenresFlags>()[1..].ToList()"/>

                    @if (_genreRecommendations.Count > 0)
                    {
                        <span>Recommendations: @string.Join(", ", _genreRecommendations) </span>
                    }

                    <ValidationMessage For="@(() => _data.ViewModel.Genres)"/>
                </div>
            </div>

            <div class="spacer"></div>

            @* Text *@
            <div class="grid-col-2 shrink gap">
                <div class="grid-label grid-label-span-2">
                    <span>üìÑ</span>
                </div>

                <div class="flex-column gap">
                    <TextBox Placeholder="Title" @bind-Value="_data.ViewModel.Title"/>
                    <ValidationMessage For="@(() => _data.ViewModel.Title)"/>
                </div>

                <div class="flex-column gap">
                    <TextArea Placeholder="Plot" Rows="5" @bind-Value="_data.ViewModel.Plot"></TextArea>
                    <ValidationMessage For="@(() => _data.ViewModel.Plot)"/>
                </div>
            </div>

            <div class="spacer"></div>

            @* Rating *@
            <div class="grid-col-2 shrink gap">

                <div class="grid-label grid-label-span-2">
                    <span>‚≠ê</span>
                </div>

                <div class="flex-column gap">
                    <div class="flex-row gap">
                        <NumberPicker @bind-Value="_data.ViewModel.Rating" Min="0" Max="100"/>
                        <Rating Value="@_data.ViewModel.Rating" ShowValue="false"/>
                    </div>
                    <ValidationMessage For="@(() => _data.ViewModel.Rating)"/>
                </div>

                <div class="flex-column gap">
                    <TextArea Placeholder="Comment" Rows="5" @bind-Value="_data.ViewModel.Comment"></TextArea>
                    <ValidationMessage For="@(() => _data.ViewModel.Comment)"/>
                </div>
            </div>

            <div class="spacer"></div>

            @* Preview *@
            <div class="grid-col-2 shrink gap">
                <div class="grid-label grid-label-span-2">
                    <span>üñºÔ∏è</span>
                </div>

                <div class="flex-column gap">
                    <FilePicker @bind-Selected="_data.Images" @bind-Files="_posterFiles" MaxFiles="10" MaxSelectedFiles="1"/>
                    <ValidationMessage For="@(() => _data.Images)"/>
                </div>
            </div>

            <div class="spacer"></div>

            @* Buttons *@
            <ValidationSummary/>

            <div class="button">
                <TextButton Text="Save" Disabled="@(!_isEnabled)"/>
            </div>

        </div>
    </EditForm>
}