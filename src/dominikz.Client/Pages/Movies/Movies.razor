@page "/movies"
@using dominikz.Client.Utils
@using dominikz.Domain.Extensions
@using dominikz.Client.Tables
@using dominikz.Client.Extensions
@using dominikz.Domain.Enums.Movies
@using dominikz.Domain.ViewModels.Movies

<PageTitle>Movies</PageTitle>

<div class="movies">

    @if (_streamingMode == false)
    {
        <MovieCarousel Data="_previews"/>
    }

    <TextBox @ref="_searchBox"
             DelayInputTrigger="true"
             Placeholder="Search ..."
             Icon="fa-solid fa-magnifying-glass"
             ValueChanged="@(value => NavManager!.AttachOrUpdateRawQueryParam(QueryNames.Movies.Search, value))"/>

    <ChipSelect T="MovieGenresFlags"
                AllowExpand="true"
                Title="Genres"
                @ref="_movieGenreSelect"
                SelectedChanged="@(value => NavManager!.AttachOrUpdateQueryParam<MovieGenresFlags>(QueryNames.Movies.Genre, value.Count > 0 ? value.First() : null))"
                Values="Enum.GetValues<MovieGenresFlags>()[1..].ToList()"/>

    @if (_streamingMode == false)
    {
        <div class="flex-row gap">

            @if (_hasCreatePermission)
            {
                <div class="admin-menu-element gap">
                    <IconButton OnClick="@(() => NavManager!.NavigateTo("/movies/edit"))" Icon="fa-solid fa-circle-plus"/>
                </div>
            }

            <div class="menu-element gap">
                <i class="fa-solid fa-border-top-left"></i>
                <Switch @bind-State="_isTableView"/>
                <i class="fa-solid fa-bars-staggered"></i>
            </div>

            <div class="menu-element">
                <IconButton OnClick="OnCopyLinkClicked" Icon="fa-solid fa-link"/>
                <IconButton OnClick="OnCreateCURLClicked" Icon="fa-solid fa-code"/>
            </div>
        </div>
    }

    @if (_isTableView)
    {
        <Table T="MovieVm" Values="@_movies" Columns="@MovieTableDefinition.Columns" ShowIndex="true"></Table>
    }
    else
    {
        <div class="movies-grid">
            @foreach (var movie in _movies)
            {
                <HorizontalCard ImageUrl="@movie.ImageUrl"
                                Title="@movie.Title"
                                OnClick="() => NavigateToMovie(movie.Id)">

                    <div class="flex-column gap">
                        <span>@movie.Year</span>
                        <Rating Value="@movie.Rating"/>
                        <div class="flex-row gap">
                            @foreach (var genre in movie.Genres.GetFlags().ToArray()[1..])
                            {
                                <span>@EnumFormatter.ToString(genre)&nbsp;</span>
                            }
                        </div>
                    </div>

                </HorizontalCard>
            }
        </div>
    }
</div>