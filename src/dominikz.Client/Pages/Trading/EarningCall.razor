@page "/trades/earningcall/{id:int}"

@using dominikz.Client.Components.Charts
@using dominikz.Client.Utils

<div class="flex-column gap">

    <div class="flex-row-no-wrap gap">
        <div class="avatar">
            @if (string.IsNullOrWhiteSpace(Data?.LogoUrl) == false)
            {
                <img style="background-color: @Colorizer.CreateColorDarkByText(Data?.Symbol)" height="150" width="150" src="@Data?.LogoUrl" alt="Logo"/>
            }
            else
            {
                <div style="background-color: @Colorizer.CreateColorDarkByText(Data?.Symbol)" class="avatar-placeholder">
                    <span>@Data?.Symbol[..Math.Min(2, Data.Symbol.Length)]</span>
                </div>
            }
        </div>
        <span style="font-size: xx-large">
            <b>@Data?.Company</b>
        </span>
    </div>

    @* Information Cards *@
    <div class="ec-card-container">
        <div class="ec-card flex-row-no-wrap gap spacing">
            <span class="ec-card-symbol">🏛️</span>
            <div class="ec-card-data-container">
                <span class="ec-card-data-name">Symbol:</span>
                <span class="ec-card-data-value">@Data?.Symbol</span>
                <span class="ec-card-data-name">ISIN:</span>
                <span class="ec-card-data-value">@Data?.ISIN</span>
                <span class="ec-card-data-name">Time:</span>
                <span class="ec-card-data-value">@Data?.Time</span>
                <span class="ec-card-data-name">Release:</span>
                <span class="ec-card-data-value">@($"{Data?.Timestamp:HH:mm}")</span>
            </div>
        </div>

        <div class="ec-card flex-row-no-wrap gap spacing">
            <span class="ec-card-symbol">📑</span>
            <div class="ec-card-data-container">
                <span class="ec-card-data-name">Revenue Estimate:</span>
                <span class="ec-card-data-value ">@($"{Data?.RevenueEstimate.ToString("C", _culture)}")</span>
                <span class="ec-card-data-name">Revenue Actual:</span>
                <span class="ec-card-data-value @GetColorByValue(Data?.RevenueActual, Data?.RevenueEstimate)">@($"{Data?.RevenueActual.ToString("C", _culture)}")</span>
                <span class="ec-card-data-name">EPS Estimate:</span>
                <span class="ec-card-data-value">@($"{Data?.EpsEstimate.ToString("C", _culture)}")</span>
                <span class="ec-card-data-name">EPS Actual:</span>
                <span class="ec-card-data-value @GetColorByValue(Data?.EpsActual, Data?.EpsEstimate)">@($"{Data?.EpsActual.ToString("C", _culture)}")</span>
            </div>
        </div>

        <div class="ec-card flex-row-no-wrap gap spacing">
            <span class="ec-card-symbol">📈</span>
            <div class="ec-card-data-container">
                <span class="ec-card-data-name">Current Price:</span>
                <span class="ec-card-data-value">@Data?.LastStockPrice?.ToString("C", _culture)</span>
                <span class="ec-card-data-name">Updated:</span>
                <span class="ec-card-data-value">@($"{Data?.Updated:HH:mm:ss}")</span>
                <span class="ec-card-data-name">Snapshots:</span>
                <span class="ec-card-data-value">@Data?.Snapshots</span>
            </div>
        </div>

        @if (Data?.Trade != null)
        {
            <div class="ec-card flex-row-no-wrap gap spacing">
                <span class="ec-card-symbol">🚀</span>
                <div class="ec-card-data-container">
                    <span class="ec-card-data-name">Buy In:</span>
                    <span class="ec-card-data-value">@($"{Data.Trade.BuyIn.ToString("C", _culture)} ({Data.Trade.BuyInTimestamp:HH:mm:ss})")</span>
                    <span class="ec-card-data-name">Buy Out:</span>
                    <div class="ec-card-data-value">
                        <span class="@GetColorByValue(Data.Trade.BuyOut, Data.Trade.BuyIn)">@($"{Data.Trade.BuyOut?.ToString("C", _culture)}")</span>
                        <span>@($"({Data.Trade.BuyOutTimestamp:HH:mm:ss})")</span>
                    </div>
                    <span class="ec-card-data-name">Stock Count:</span>
                    <span class="ec-card-data-value">@Data.Trade.StockCount</span>
                    <span class="ec-card-data-name">Fee:</span>
                    <span class="ec-card-data-value">@Data.Trade.Fee?.ToString("C", _culture)</span>
                    <span class="ec-card-data-name">Tax:</span>
                    <span class="ec-card-data-value">@Data.Trade.Tax?.ToString("C", _culture)</span>
                </div>
            </div>

            <div class="ec-card flex-row-no-wrap gap spacing">
                <span class="ec-card-symbol">💵</span>
                <div class="ec-card-data-container">
                    <span class="ec-card-data-name">Revenue:</span>
                    <span class="ec-card-data-value @GetColorByValue(CalculateTradeSummaryView().Revenue)">@(CalculateTradeSummaryView().Revenue.ToString("C", _culture))</span>
                    <span class="ec-card-data-name">Fee:</span>
                    <span class="ec-card-data-value">@(CalculateTradeSummaryView().Fee.ToString("C", _culture))</span>
                    <span class="ec-card-data-name">Revenue (Brutto):</span>
                    <span class="ec-card-data-value @GetColorByValue(CalculateTradeSummaryView().Brutto)">@(CalculateTradeSummaryView().Brutto.ToString("C", _culture))</span>
                    <span class="ec-card-data-name">Tax:</span>
                    <span class="ec-card-data-value">@(CalculateTradeSummaryView().Tax.ToString("C", _culture))</span>
                    <span class="ec-card-data-name">Revenue (Netto):</span>
                    <span class="ec-card-data-value @GetColorByValue(CalculateTradeSummaryView().Netto)">@(CalculateTradeSummaryView().Netto.ToString("C", _culture))</span>
                </div>
            </div>
        }

        @if ((Data?.Externals.Length ?? 0) > 0)
        {
            <div class="ec-card flex-row-no-wrap gap spacing">
                <span class="ec-card-symbol">🔗</span>
                <div class="flex-column gap">
                    @foreach (var external in Data!.Externals)
                    {
                        <a style="color: cornflowerblue" href="@external.Url">@external.Name</a>
                    }
                </div>
            </div>
        }

    </div>

    @* Timeline *@
    <div class="hide-on-mobile flex-column gap">
        <span style="font-size: x-large">
            <b>Timeline</b>
        </span>

        <LineChart Values="_lineChartData"/>
    </div>

    @* Quarters *@
    <div class="flex-column gap">
        <span style="font-size: x-large">
            <b>Last 4 Quarters</b>
        </span>
        <BarChart Values="_barChartData"/>
    </div>

</div>