@page "/trades"
@using dominikz.Domain.Enums.Trades

<PageTitle>Trades</PageTitle>

<CardGrid>
    @foreach (var call in _earningsCalls)
    {
        <div class="trade-card flex-row-no-wrap gap spacing surface" @onclick="() => SelectEarningCall(call.Id)">
            <div class="avatar">
                @if (string.IsNullOrWhiteSpace(call.LogoUrl) == false)
                {
                    <img height="150" width="150" src="@call.LogoUrl" alt="Logo"/>
                }
                else
                {
                    <div style="background-color: @($"#{new Random().Next(0x1000000):X6}")" class="avatar-placeholder">
                        <span>@call.Symbol[..Math.Min(2, call.Symbol.Length)]</span>
                    </div>
                }
            </div>
            <div class="trade-card-body flex-column gap">

                <span>@call.Name</span>
                <span>@call.Symbol</span>

                <div class="flex-row-no-wrap gap">
                    @if (call.Sources.HasFlag(InformationSource.EarningsWhispers))
                    {
                        <img height="20" width="20" src="assets/icons/earningswhipsers.ico" alt="Logo"/>
                    }
                    @if (call.Sources.HasFlag(InformationSource.OnVista))
                    {
                        <img height="20" width="20" src="assets/icons/onvista.png" alt="Logo"/>
                    }
                    @if (call.Sources.HasFlag(InformationSource.FinanzenNet))
                    {
                        <img height="20" width="20" src="assets/icons/finanzenNet.ico" alt="Logo"/>
                    }
                    @if (call.Sources.HasFlag(InformationSource.AktienFinder))
                    {
                        <img height="20" width="20" src="assets/icons/aktienfinder.png" alt="Logo"/>
                    }
                </div>

            </div>
        </div>
    }
</CardGrid>

<Timeline Events="_events"/>